/// The latest raw readings from the down-facing line sensors.
/**
 * @brief Library reactors for the line sensors on the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 *
 * NOTE: The line sensors cannot be used together with the bump sensors. See <a
 * href="https://www.pololu.com/docs/0J86/6.5">Section 6.5 of the Pololu 3pi+ 2040 User's Guide</a>.
 *
 * @author Abhi Gundrala
 * @author Edward A. Lee
 */
target C {
  platform: "RP2040",
  threading: false,
  files: ["../../robot-lib/"],  // Needed to find ir_senrors.h
  cmake-include: ["../../robot-lib/robot-lib.txt"]  // Needed to find ir_senrors.h
}

preamble {=
  #include <ir_sensors.h>
=}

/**
 * Upon receiving a trigger input, read the five line sensors and output their values as an array
 * with five elements. The first element corresponds to the leftmost sensor, and the last element
 * corresponds to the rightmost sensor. The readings are between 0 and 1024, with higher readings
 * corresponding to less light being reflected.
 *
 * When a calibrate input arrives, a measurement is taken to calibrate the sensors. A typical usage
 * is to trigger this a few times via the calibrate input, during which the robot should be rolled
 * over light and dark surfaces, and then swith to triggering it with the trigger input.
 */
reactor Line {
  input calibrate: bool
  input trigger: bool
  output reflect: uint16_t[5]
  output average: uint

  state calibrate_flag: bool = false

  reaction(calibrate) {=
    line_sensors_calibrate();
    self->calibrate_flag = true;
  =}

  reaction(trigger) -> average, reflect {=
    uint avg = 0;
    if (!self->calibrate_flag) {
        line_sensors_read();
        for (int i=0; i<5; i++) {
            reflect->value[i] = line_sensors[i];
            avg += reflect->value[i];
        }
    } else {
        line_sensors_read_calibrated();
        for (int i=0; i<5; i++) {
            reflect->value[i] = line_sensors_calibrated[i];
            avg += reflect->value[i];
        }
    }
    lf_set(average, avg / 5);
    lf_set_present(reflect);
  =}
}

/**
 * At the rate determined by the sample_period parameter, either perform a calibration measurement
 * or a regular measurement of the line sensors of the robot. If the calibration_time parameter is
 * greater than 0, then calibration will be performed for this amount of time, during which no
 * outputs will be produced. After the calibration phase, the reactor reads the five line sensors
 * and outputs their values as an array with five elements. The first element corresponds to the
 * leftmost sensor, and the last element corresponds to the rightmost sensor. The readings are
 * between 0 and 1024, with higher readings corresponding to less light being reflected.
 */
reactor LineWithCalibration(calibration_time: time = 10 s, sample_period: time = 100 ms) {
  output reflect: uint16_t[5]
  output average: uint

  line = new Line()

  line.reflect -> reflect
  line.average -> average

  timer t(0, sample_period)

  initial mode CALIBRATING {
    timer end_calibration(calibration_time)
    reaction(t) -> line.calibrate {=
      if (self->calibration_time > 0) {
        lf_set(line.calibrate, true);
      }
    =}

    reaction(end_calibration) -> reset(MEASURING) {= lf_set_mode(MEASURING); =}
  }

  mode MEASURING {
    reaction(t) -> line.trigger {= lf_set(line.trigger, true); =}
  }
}
